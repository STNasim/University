#Ejercicio 1
rm(list =ls())
gc()
library(pacman)
p_load(diplyr)
datos <- read.csv("Entrenamiento_ECI_2020.csv")
summary(datos)
size(datos)
dim(datos)
str(datos)
summary(datos)
sum(is.na(datos))
colsums(is.na(datos))
colSums(is.na(datos))
#b
table(datos$Stage)
datos2 <- subset(datos, grepl("Closed", Stage))
table(datos2$Stage)
datos2$Stage <- ifelse(datos2$Stage == "Closed Won", 1, 0)
table(datos2$Stage)
str(table2)
str(datos2)
datos2$Stage <- as.boolean(datos2$Stage) # convert to numeric
datos2$Stage <- as.factor(datos2$Stage) # convert to numeric
table(datos2$Stage)
str(datos2)
#a
dim(datos)
datos <- read.csv("Entrenamiento_ECI_2020.csv", , stringsAsFactors = TRUE)
#a
dim(datos)
str(datos)
type(datos2$Region)
class(datos2$Region)
#b
table(datos$Stage)
datos2 <- subset(datos, grepl("Closed", Stage))
table(datos2$Stage)
datos2$Stage <- ifelse(datos2$Stage == "Closed Won", 1, 0)
table(datos2$Stage)
datos2$Stage <- as.factor(datos2$Stage) # convert to factor
colSums(is.na(datos))
p_load(diplyr,ggplot2)
#c
ggplot2(datos2)
#c
ggplot(datos2, aes(x = Stage,
y = Total Amount,
#c
ggplot(datos2, aes(x = Stage,
y = Total Amount,
#c
ggplot(datos2, aes(x = Stage,
y = Total_Amount,
fill = Stage) + geom_boxplot())
#c
ggplot(data = datos2, aes(x = Stage,
y = Total_Amount,
fill = Stage) + geom_boxplot())
#c
ggplot(data = datos2, aes(x = Stage,
y = Total_Amount,
fill = Stage)) + geom_boxplot()
#d
plot(data$Stage ~ data$TRF)
#d
plot(datos$Stage ~ datos$TRF)
#d
scatterplot(datos$Stage ~ datos$TRF)
#d
plot(datos$Stage ~ datos$TRF)
#d
plot(datos$Stage ~ datos$TRF)
#d
plot(datos$Stage ~ datos$TRF)
#d
plot(datos$Stage ~ datos$Total_Taxable_Amount)
#d
boxplot(datos$Stage ~ datos$Total_Taxable_Amount)
#d
plot(datos$Stage,datos$Total_Taxable_Amount)
#c
ggplot(data = datos2, aes(x = Stage,
y = Total_Amount,
fill = Stage)) + geom_boxplot()
#d
plot(datos$Stage,datos$TRF)
#d
plot(datos$Stage,datos$TRF <= 200)
#d
plot(datos$Stage,datos$TRF <= 300)
#d
plot(datos$Stage,datos$TRF)
#d
plot(data = datos, datos$Stage,datos$TRF)
#d
plot(data = datos$TRF <= 300, datos$Stage,datos$TRF)
#d
plot(data = datos[datos$TRF <= 300], datos$Stage,datos$TRF)
#d
plot(data = datos[datos$TRF<=300], datos$Stage,datos$TRF)
#d
plot(data = datos[datos$TRF<=200], datos$Stage,datos$TRF)
#d
plot(datos$Stage,datos$TRF)
#d
plot(datos2$Stage,datos$TRF)
#d
plot(datos2$Stage,datos$TRF)
#d
scatterplot(datos2$Stage,datos$TRF)
#c
ggplot(data = datos2, aes(x = Stage,
y = Total_Amount,
fill = Stage)) + geom_boxplot()
#d
plot(datos[c("TRF","Total_Amount")],col =datos$Stage)
#d
plot(datos[c("TRF","Total_Amount","Total_Taxable_Amount")],col = datos$Stage)
freq(datos$Bureaucratic_Code)
frec(datos$Bureaucratic_Code)
frequency(datos$Bureaucratic_Code)
p_load(diplyr,ggplot2)
p_load(diplyr,ggplot2,R.matlab)
datos <. readmat("/ECGs/A00001.mat")
datos <- readmat("/ECGs/A00001.mat")
p_load(diplyr,ggplot2,R.matlab)
p_load(ggplot2,R.matlab)
datos <- readmat("/ECGs/A00001.mat")
datos <- readmat("/ECGs/A00001.mat")
#Ejercicio 2
rm(list =ls())
gc()
library(pacman)
p_load(ggplot2,R.matlab,dyplyr)
p_load(ggplot2,R.matlab)
datos <- readmat("/ECGs/A00001.mat")
p_load(ggplot2,rmatio)
datos <- readmat("/ECGs/A00001.mat")
p_load(ggplot2,rmatio)
datos <- readmat("/ECGs/A00001.mat")
datos <- read.mat("/ECGs/A00001.mat")
datos <- read.mat("./ECGs/A00001.mat")
View(datos)
View(datos)
datos <- data.frame()
datos <- rbind(datos,read.mat("./ECGs/*.mat"))
datos <- list()
nombres <- list.files(pattern = "*.mat")
nombres <- list.files(pattern = "/ECGs/*.mat")
nombres <- list.files(pattern = "./ECGs/*.mat")
nombres <- list.files(path = "/ECGs", pattern = "*.mat")
nombres <- list.files(path = "./ECGs", pattern = "*.mat")
lista <- lapply(nombres, readMat)
lista <- lapply(path = "./ECGs", nombres, readMat)
lista <- lapply(nombres, readMat)
lista <- lapply(nombres, readmat)
M
lista <- lapply(nombres, readMat)
lista <- lapply(path = "./ECGs", nombres, readMat)
lista <- lapply(nombres, read.mat)
nombres <- list.files(path = "./ECGs", pattern = "*.mat", full.names = TRUE)
lista <- lapply(nombres, read.mat)
View(lista)
View(lista)
View(lista)
View(datos)
View(lista)
View(lista)
View(lista)
View(lista)
save(lista, file ="ecgs.RDATA")
View(lista)
median <- lapply(lista, median)
medianas <- lapply(lista, median)
lista <- lapply(lista,unlist)
View(lista)
nombres <- list.files(path = "./ECGs", pattern = "*.mat", full.names = TRUE)
lista <- lapply(nombres, read.mat)
lista <- lapply(lista,unlist)
View(lista)
medianas <- lapply(lista, median)
View(medianas)
View(medianas)
medianas <- unlist(lapply(lista, median))
minimos <- unlist(lapply(lista, min))
medianas <- unlist(lapply(lista, median))
maximos <- unlist(lapply(lista, max))
tiempos <- unlist(lapply(lista, length()/300))
tiempos <- unlist(lapply(lista, length(lista)/300))
tiempos <- unlist(lapply(lista, fun(length(lista)/300)))
length(x)/300
fun <- function(x) {
length(x)/300
}
tiempos <- unlist(lapply(lista, fun)
tiempos <- unlist(lapply(lista, fun)
tiempos <- unlist(lapply(lista, fun))
desvios <- unlist(lapply(lista, sd))
library(pacman)
datos <- read.csv("Entrenamiento_ECI_2020.csv", stringsAsFactors = TRUE)
#a
dim(datos)
str(datos)
summary(datos)
colSums(is.na(datos))
library(dplyr)
install.packages("dplyr")
library(dplyr)
data("iris")
iris %>% group_by(Species) %>% summarise(mean_Largo_petalo = mean(Petal.Length))
select(iris, )
iris <- iris %>% rename(Largo_Petalo=Petal.Length)
head(iris)
library(ggplot2)
install.packages("ggplot2")
library(dplyr)
data("iris")
iris %>% group_by(Species) %>% summarise(mean_Largo_petalo = mean(Petal.Length))
select(iris, )
iris <- iris %>% rename(Largo_Petalo=Petal.Length)
head(iris)
library(ggplot2)
table(iris$Species) %>% barplot(col = "blue", main = "Cantidad de plantas por especies")
plot(iris$Petal.Length, iris$Petal.Width, xlab = "Largo de pétalo",
ylab = "Ancho de pétalo", main = "Largo vs Ancho", col = iris$Species)
legend("bottomright", legend = unique(iris$Species), col = 1:3, pch = 19, bty = "n")
boxplot(iris$Petal.Length, iris$Petal.Width, col = "blue", names = c("Largo", "Ancho"),
main = "Boxplots Largo y Ancho")
boxplot(iris$Petal.Length~iris$Species, col = 1:3,
main = "Largo de pétalo por especie",
xlab = "Especie",
ylab = "Largo del pétalo")
legend("bottomright", legend = unique(iris$Species), col = 1:3, pch = 19, bty = "n")
lista <- list(seq(1, 10,2), )
lista[[2]] <- iris
lista
library(ggplot2)
table(iris$Species) %>% barplot(col = "blue", main = "Cantidad de plantas por especies")
plot(iris$Petal.Length, iris$Petal.Width, xlab = "Largo de pétalo",
ylab = "Ancho de pétalo", main = "Largo vs Ancho", col = iris$Species)
legend("bottomright", legend = unique(iris$Species), col = 1:3, pch = 19, bty = "n")
boxplot(iris$Petal.Length, iris$Petal.Width, col = "blue", names = c("Largo", "Ancho"),
main = "Boxplots Largo y Ancho")
library(dplyr)
data("iris")
iris %>% group_by(Species) %>% summarise(mean_Largo_petalo = mean(Petal.Length))
select(iris, )
iris <- iris %>% rename(Largo_Petalo=Petal.Length)
head(iris)
library(ggplot2)
table(iris$Species) %>% barplot(col = "blue", main = "Cantidad de plantas por especies")
plot(iris$Petal.Length, iris$Petal.Width, xlab = "Largo de pétalo",
ylab = "Ancho de pétalo", main = "Largo vs Ancho", col = iris$Species)
legend("bottomright", legend = unique(iris$Species), col = 1:3, pch = 19, bty = "n")
boxplot(iris$Petal.Length, iris$Petal.Width, col = "blue", names = c("Largo", "Ancho"),
main = "Boxplots Largo y Ancho")
boxplot(iris$Petal.Length~iris$Species, col = 1:3,
main = "Largo de pétalo por especie",
xlab = "Especie",
ylab = "Largo del pétalo")
boxplot(iris$Petal.Length, iris$Petal.Width, col = "blue", names = c("Largo", "Ancho"),
main = "Boxplots Largo y Ancho")
plot(iris$Largo_Petalo, iris$Petal.Width, xlab = "Largo de pétalo",
ylab = "Ancho de pétalo", main = "Largo vs Ancho", col = iris$Species)
legend("bottomright", legend = unique(iris$Species), col = 1:3, pch = 19, bty = "n")
boxplot(iris$Largo_Petalo, iris$Petal.Width, col = "blue", names = c("Largo", "Ancho"),
main = "Boxplots Largo y Ancho")
data("iris")
iris %>% group_by(Species) %>% summarise(mean_Largo_petalo = mean(Petal.Length))
select(iris, )
head(iris)
library(ggplot2)
table(iris$Species) %>% barplot(col = "blue", main = "Cantidad de plantas por especies")
plot(iris$Petal.Length, iris$Petal.Width, xlab = "Largo de pétalo",
ylab = "Ancho de pétalo", main = "Largo vs Ancho", col = iris$Species)
legend("bottomright", legend = unique(iris$Species), col = 1:3, pch = 19, bty = "n")
boxplot(iris$Petal.Length, iris$Petal.Width, col = "blue", names = c("Largo", "Ancho"),
main = "Boxplots Largo y Ancho")
boxplot(iris$Petal.Length~iris$Species, col = 1:3,
main = "Largo de pétalo por especie",
xlab = "Especie",
ylab = "Largo del pétalo")
legend("bottomright", legend = unique(iris$Species), col = 1:3, pch = 19, bty = "n")
